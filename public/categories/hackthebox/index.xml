<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HackTheBox on </title>
    <link>http://localhost:1313/categories/hackthebox/</link>
    <description>Recent content in HackTheBox on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Jun 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/hackthebox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Soccer</title>
      <link>http://localhost:1313/posts/soccer-htb/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/soccer-htb/</guid>
      <description>&lt;p&gt;Writeup for HackTheBox&amp;rsquo;s Soccer.&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;p&gt;Starting off with the &lt;code&gt;nmap&lt;/code&gt; scan:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We have port 80 and 22 open, &lt;code&gt;nmap&lt;/code&gt; identified that the HTTP port is redirecting to the &lt;code&gt;soccer.htb&lt;/code&gt; , performing a directory busting on it revealed an endpoint &lt;code&gt;/tiny&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is a H3K File Manager, checking for any exploit for it revealed that we have PHP File Upload RCE:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/febinrev/tinyfilemanager-2.4.3-exploit&#34;&gt;https://github.com/febinrev/tinyfilemanager-2.4.3-exploit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Exploitation requires an authenticated user, default credentials worked for the application:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HackTheBox Pwn: Toxin</title>
      <link>http://localhost:1313/posts/toxin/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/toxin/</guid>
      <description>&lt;p&gt;This challenge on the HackTheBox was released recently, the archive attachment contains the following files:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;toxin&lt;/code&gt;: The binary&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ld-2.27.so&lt;/code&gt; and the &lt;code&gt;libc-2.27&lt;/code&gt; file.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The given LIBC files hinted towards the binary running on the Ubuntu 18.04 aka Bionic Beaver.&lt;/p&gt;&#xA;&lt;h1 id=&#34;reverse-engineering&#34;&gt;Reverse Engineering&lt;/h1&gt;&#xA;&lt;p&gt;Using the IDA, here&amp;rsquo;s the pseudocode equivalence of the function:-&lt;/p&gt;&#xA;&lt;h5 id=&#34;add-function&#34;&gt;&lt;code&gt;add&lt;/code&gt; function&lt;/h5&gt;&#xA;&lt;p&gt;The &lt;code&gt;add&lt;/code&gt; function was as follows:-&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This function was responsible for taking the &lt;code&gt;size&lt;/code&gt; and allocate a chunk via &lt;code&gt;malloc&lt;/code&gt; with the given &lt;code&gt;size&lt;/code&gt; and add it to the gloabl pointer &lt;code&gt;toxins&lt;/code&gt;, The takeaways from this function was the &lt;code&gt;size&lt;/code&gt; restriction was that we can allocate chunks upto 0x70 &lt;code&gt;size&lt;/code&gt; and since the &lt;code&gt;index&lt;/code&gt; given must be in within &lt;code&gt;index &amp;lt; 0  || index &amp;gt; 2&lt;/code&gt; it&amp;rsquo;ll throw an error, same as for if the chunk is occupied in the global array, it&amp;rsquo;ll just throw the error.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTB: RopeTwo Writeup</title>
      <link>http://localhost:1313/posts/ropetwo-hackthebox/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/ropetwo-hackthebox/</guid>
      <description>&lt;p&gt;This box was without a second thought one of the favourite box of mine on HackTheBox so far, since I am more of a pwn and reverse engineering person, this machine was a challenge, an outstanding one which pushed my learning skills more further because upto the moment I really went into this, I was not a good at heap exploitation, more skeptical about the V8 exploitation skills of mine and of course I knew nothing of the kernel pwn, so this was a way to tackle every weakness of mine, hope you find the writeup useful, I&amp;rsquo;ll include the link of the attachments at the very bottom to my files, QEMU enviornment for the kernel pwn and the exploits, without further ado, let&amp;rsquo;s start.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
