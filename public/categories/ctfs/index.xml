<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CTFs on Pwnfuzz Blog</title>
    <link>http://localhost:1313/categories/ctfs/</link>
    <description>Recent content in CTFs on Pwnfuzz Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/ctfs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DCTF - 2021</title>
      <link>http://localhost:1313/posts/ductf/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/ductf/</guid>
      <description>&lt;p&gt;I played this CTF event with the WeakButLeet team and in the end, we managed to get 18th rank, sadly we couldnâ€™t do much crypto challenges but overall it was a fun CTF to get refreshed, there were other CTFs running as well but I only played this as there was a local CTF going on. In the end, I manage to solve 7/8 pwn challenges and remaining one was solved by Faith, super talented guy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hacktivitycon - Pwn challenges</title>
      <link>http://localhost:1313/posts/hacktivitycon-pwn/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hacktivitycon-pwn/</guid>
      <description>&lt;p&gt;I played this CTF mainly because I was chilling out and wanted to try out some challenges from the CTF. I managed to do the every pwn challenge except space one which was heap and the exploitation mechanism of it belongs to GLIBC 2.27 and I am only familiar with GLIBC 2.24 at the moment, but I know what to do this week,&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h1 id=&#34;pancake&#34;&gt;Pancake&lt;/h1&gt;&#xA;&lt;p&gt;Pancake challenge was very simple as the buffer overflow was very suspectible as the binary used the &lt;code&gt;gets&lt;/code&gt; function which is a vulnerable function as it&amp;rsquo;ll keep taking the input a new line &lt;code&gt;\n&lt;/code&gt; is encountered. To our luck, the binary has a function named &lt;code&gt;secret&lt;/code&gt; which spawns a shell for us. This was basically a &lt;strong&gt;ret2win&lt;/strong&gt; technique.&lt;/p&gt;</description>
    </item>
    <item>
      <title>zer0ptsCTF - Hipwn Challenge</title>
      <link>http://localhost:1313/posts/zer0pts-hipwn/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/zer0pts-hipwn/</guid>
      <description>&lt;p&gt;Writeup on how I managed to solve &lt;a href=&#34;http://localhost:1313/assets/hipwn&#34;&gt;hipwn&lt;/a&gt; from &lt;a href=&#34;https://www.zer0pts.com&#34;&gt;zer0ptsCTF&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h1 id=&#34;analzying-source-code-and-binary&#34;&gt;Analzying Source Code and Binary&lt;/h1&gt;&#xA;&lt;p&gt;So, we got 2 files in a gzip archive, one which is &lt;code&gt;main.c&lt;/code&gt; which is the source code of the binary and &lt;code&gt;chall&lt;/code&gt; which is the executable we need to pwn. Let&amp;rsquo;s check it out:-&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Looks simple enough, of course we have &lt;code&gt;gets&lt;/code&gt; which means we have a buffer overflow vulnerability which seems obvious. Other than that, nothing is really much of a concern.&#xA;Let&amp;rsquo;s run file and check the output:-&lt;/p&gt;</description>
    </item>
    <item>
      <title>DownunderCTF: V8 Pwn</title>
      <link>http://localhost:1313/posts/v8-pwn-downunderctf/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/v8-pwn-downunderctf/</guid>
      <description>&lt;p&gt;In-depth write-up of the V8 challenge from DownUnderCTF 2020.&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h1 id=&#34;foreword&#34;&gt;Foreword&lt;/h1&gt;&#xA;&lt;p&gt;Unfortunately I couldn&amp;rsquo;t solve the challenge, as it was supposed to be easy one still I couldn&amp;rsquo;t but I thought I should do a post with the writeups/exploits from other people and make it very explainative such that I can use for reference later so when I&amp;rsquo;ll get stucked I can take a look and move on with research and who knows maybe it&amp;rsquo;ll be helpful for others too. This write-up mostly revolve around the references listed at the bottom.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
