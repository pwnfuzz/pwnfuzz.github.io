<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pwn, Shellcode, Egghunting, Hackthebox on Pwnfuzz Blog</title>
    <link>http://localhost:1313/tags/pwn-shellcode-egghunting-hackthebox/</link>
    <description>Recent content in Pwn, Shellcode, Egghunting, Hackthebox on Pwnfuzz Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Feb 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/pwn-shellcode-egghunting-hackthebox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox Pwn: Hunting</title>
      <link>http://localhost:1313/posts/hunting/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hunting/</guid>
      <description>&lt;p&gt;This challenge was quite good, as someone who never really did egghunting shellcode, this was a good learning experience. So, the binary given s pretty simple, all the protections have been disabled except the PIE but, analysing the workflow, we can see that it reads shellcode and then execute that shellcode.&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&#xA;&lt;h1 id=&#34;reverse-engineering&#34;&gt;Reverse Engineering&lt;/h1&gt;&#xA;&lt;p&gt;In the binary itself, the &lt;code&gt;main&lt;/code&gt; functions seems to be doing&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here, if gets the address from the following function:-&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
