---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE } from '../consts';
import { getCollection, type CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const postsUnprocessed = (await getCollection('blog')).filter(
  post => post.data.summary || post.data.description
).sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const posts = await Promise.all(
  postsUnprocessed.map(async (post) => {
    const wordCount = (post.body || '').split(/\s+/).length;
    const readingTime = `${Math.max(1, Math.ceil(wordCount / 200))} min read`;
    return {
      ...post,
      readingTime,
    };
  })
);

const allTags = Array.from(new Set(posts.flatMap(post => post.data.tags || [])));
const POSTS_PER_PAGE = 4;
const paginatedPosts = posts.slice(0, POSTS_PER_PAGE);
// Calculate total pages for button rendering
const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE);
---
<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Blog | ${SITE_TITLE}`} description="All technical writeups and deep dives." />
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Google+Sans:wght@400;600;700&display=swap');
      body {
        font-family: 'Google Sans', 'Inter', Arial, sans-serif; background: #f8fafc; color: #222226;
        background-image: url("data:image/svg+xml,%3csvg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cline x1='0' y1='32' x2='32' y2='0' stroke='rgba(0,0,0,0.04)' stroke-width='1'/%3e%3c/svg%3e");
        background-repeat: repeat;
        background-size: 32px 32px;
      }
      main {
        max-width: 1300px;
        margin: 0 auto;
        display: flex;
        align-items: flex-start;
        gap: 3rem;
        padding: 2.5rem 2.5rem 2rem 2.5rem;
        background: var(--bg);
      }
      main[data-astro-cid-j7pv25f6] {
        width: 100%;
        margin: 0 auto;
      }
      .main-content {
        flex: 1 1 0;
        min-width: 0;
        font-size: 16px;
      }
      .sidebar {
        border-left: 1px solid var(--border);
        padding-left: 1.2rem;
        flex: 0 0 280px;
        max-width: 320px;
        min-width: 220px;
        font-size: 1rem;
        padding-top: 0.5rem;
        color: var(--text-secondary);
        background: var(--bg);
      }
      .section-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: var(--accent);
        margin-bottom: 1.2rem;
        letter-spacing: 0.5px;
      }
      .post-list {
        list-style: none;
        margin: 0;
        padding: 0;
      }
      .post-row {
        padding: 1.2rem 0;
        border-bottom: 1px solid var(--border);
        position: relative;
        background: var(--bg);
        color: #000;
      }
      .post-title {
        font-size: 1.35rem;
        font-weight: 700;
        color: #111;
        text-decoration: underline;
        transition: color 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 0.5em;
      }
      .post-title .hash {
        color: var(--accent);
        text-decoration: underline;
        font-weight: 900;
        margin-right: 0.18em;
      }
      .post-meta {
        color: #555;
        font-size: 0.95rem;
        margin: 0.2rem 0 0.7rem 0;
        letter-spacing: 0.01em;
        display: flex;
        gap: 0.7em;
        align-items: center;
      }
      .post-meta .author {
        font-weight: 600;
        color: #666;
      }
      .post-meta .reading-time {
        background: none;
        color: #888;
        font-size: 0.93em;
        font-weight: 400;
        margin-left: 0.2em;
        letter-spacing: 0.01em;
      }
      .post-summary {
        color: #000;
        font-size: 1rem;
        margin-bottom: 0.7rem;
        line-height: 1.6;
      }
      .sidebar-section {
        margin-bottom: 2.2rem;
        background: var(--bg);
        border-radius: 0;
        box-shadow: none;
        padding: 0 0 1.5rem 0;
        border: none;
      }
      .sidebar-section h3 {
        font-size: 1.08rem;
        color: var(--accent);
        font-weight: 600;
        margin-bottom: 0.7rem;
        letter-spacing: 0.01em;
      }
      .sidebar-tags a {
        display: inline-block;
        background: var(--muted);
        color: var(--text-secondary);
        border-radius: 6px;
        padding: 0.2em 0.7em;
        font-size: 0.93em;
        margin-right: 0.5em;
        text-decoration: none;
        margin-bottom: 0.2em;
        font-weight: 600;
      }
      @media (max-width: 900px) {
        main { flex-direction: column; }
        .sidebar { max-width: 100%; min-width: 0; margin-top: 2rem; }
      }
      @media (max-width: 600px) {
        .section-title { font-size: 1.3rem; }
        .card { padding: 1.1rem 1rem 1rem 1rem; }
        main { padding: 1.2rem 0.5rem 1rem 0.5rem; }
        .main-content { width: 100%; padding: 0; }
        .sidebar { width: 100%; padding-left: 0.5rem; }
      }
      .sidebar-list {
        display: flex;
        flex-direction: column;
        gap: 0.2em;
      }
      .sidebar-item {
        font-size: 1rem;
        font-family: 'Google Sans', 'Inter', Arial, sans-serif;
      }
      .sidebar-item a {
        font-size: 1.05rem;
        font-weight: 600;
        color: #111;
        text-decoration: underline;
        transition: color 0.2s;
        letter-spacing: 0.01em;
        display: inline-flex;
        align-items: center;
        gap: 0.4em;
        margin-bottom: 0.1em;
      }
      .sidebar-item a .hash {
        color: var(--accent);
        text-decoration: underline;
        font-weight: 900;
        margin-right: 0.18em;
      }
      .sidebar-item a:hover {
        color: var(--accent);
        text-decoration: underline;
      }
      .sidebar-delim {
        border-bottom: 2px solid var(--accent);
        margin: 0.7em 0 0.2em 0;
      }
      .sidebar-item-desc {
        font-size: 0.77em;
        color: var(--text-secondary);
        margin-top: 0.2em;
      }
      .post-tags {
        margin-top: 0.7em;
      }
      .post-tag {
        display: inline-block;
        background: var(--muted);
        color: var(--text-secondary);
        border-radius: 6px;
        padding: 0.2em 0.7em;
        font-size: 0.93em;
        margin-right: 0.5em;
        text-decoration: none;
        margin-bottom: 0.2em;
        font-weight: 600;
        transition: background 0.2s, color 0.2s;
      }
      .post-tag:hover {
        background: var(--border);
        color: var(--fg);
      }
      .pagination-link {
        color: var(--fg);
        background: var(--muted);
        border: 1px solid var(--border);
        border-radius: 6px;
        padding: 0.4em 1.1em;
        margin: 0 0.1em;
        font-weight: 600;
        text-decoration: none;
        transition: background 0.2s, color 0.2s;
      }
      .pagination-link:hover {
        background: var(--border);
        color: var(--fg);
      }
      .pagination-active {
        background: var(--border);
        color: var(--fg);
        cursor: default;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="main-content">
        <ul class="post-list">
          {paginatedPosts.length === 0 ? (
            <div style="color:#888; font-size:1.1rem;">No blog posts found. Please add posts to <code>src/content/blog/</code> with the correct frontmatter.</div>
          ) : (
            paginatedPosts.map((post) => (
              <li class="post-row">
                <a href={`/posts/${post.id}/`} class="post-title"><span class="hash">#</span>{post.data.title}</a>
                <div class="post-meta">
                  <FormattedDate date={post.data.pubDate} />
                  {post.data.author && <span class="author">{post.data.author}</span>}
                  <span class="reading-time">{post.readingTime}</span>
                </div>
                <div class="post-summary">{post.data.summary || post.data.description}</div>
              </li>
            ))
          )}
        </ul>
        <nav class="pagination" style="display:flex;justify-content:center;gap:1em;margin:2em 0;align-items:center;">
          <a href="/" class="pagination-link pagination-active">1</a>
          {totalPages >= 2 && <a href="/page/2/" class="pagination-link">2</a>}
          {totalPages >= 3 && <a href="/page/3/" class="pagination-link">3</a>}
          {totalPages > 1 && <a href="/page/2/" class="pagination-link">Next &rarr;</a>}
        </nav>
      </div>
      <aside class="sidebar">
        <div class="sidebar-section">
          <h3>Recent Posts</h3>
          <div class="sidebar-list">
            {posts.slice(0, 3).map((post, idx) => (
              <div class="sidebar-item" style="margin-bottom:0.7em;">
                <a href={`/posts/${post.id}/`}><span class="hash">#</span>{post.data.title}</a>
                <div class="sidebar-item-desc">
                  {post.data.summary ? post.data.summary.split(' ').slice(0,15).join(' ') + (post.data.summary.split(' ').length > 15 ? '...' : '') :
                   post.data.description ? post.data.description.split(' ').slice(0,15).join(' ') + (post.data.description.split(' ').length > 15 ? '...' : '') :
                   (post.data.pubDate ? (new Date(post.data.pubDate)).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) : '')}
                </div>
                {idx < 2 && <div class="sidebar-delim"></div>}
              </div>
            ))}
          </div>
        </div>
      </aside>
    </main>
    <Footer />
  </body>
</html>
