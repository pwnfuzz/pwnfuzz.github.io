---
import { getCollection, type CollectionEntry } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = Array.from(new Set(posts.flatMap(post => post.data.tags || [])));
  return tags.map(tag => ({ params: { tag } }));
}

const { tag } = Astro.params;
const posts: CollectionEntry<'blog'>[] = (await getCollection('blog')).filter(post => (post.data.tags || []).includes(tag));
---
<!doctype html>
<html lang="en">
<head>
  <BaseHead title={`Posts tagged: ${tag} | ${SITE_TITLE}`} description={`All posts tagged with "${tag}".`} />
  <style>
    body {
      background: #f8fafc;
    }
    .card-list {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      margin-top: 2rem;
      padding: 2rem;
    }
    .card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.04);
      padding: 1.5rem 2rem;
      transition: box-shadow 0.2s;
      border: 1px solid #eee;
    }
    .card:hover {
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    }
    .card-title {
      margin: 0 0 0.5rem 0;
      font-size: 1.5rem;
    }
    .card-meta {
      color: #888;
      font-size: 0.95rem;
      margin-bottom: 0.5rem;
    }
    .card-tags {
      margin-top: 0.5rem;
    }
    .card-tags a {
      display: inline-block;
      background: #ede9fe;
      color: #7c3aed;
      border-radius: 6px;
      padding: 0.2em 0.7em;
      font-size: 0.85em;
      margin-right: 0.5em;
      text-decoration: none;
      margin-bottom: 0.2em;
      font-weight: 600;
      transition: background 0.2s, color 0.2s;
    }
    .card-tags a:hover {
      background: #7c3aed;
      color: #fff;
    }
    h1 {
      padding: 2rem 2rem 0;
    }
  </style> 
</head>
<body>
  <Header />
  <main>
    <h1>Posts tagged: {tag}</h1>
    <div class="card-list">
      {posts.map((post) => (
        <div class="card">
          <a href={`/posts/${post.id}/`}><h2 class="card-title">{post.data.title}</h2></a>
          <div class="card-meta">
            <FormattedDate date={post.data.pubDate} />
            {post.data.author && ` â€¢ ${post.data.author}`}
          </div>
          <div>{post.data.summary || post.data.description}</div>
          <div class="card-tags">
            {(post.data.tags || []).map((t) => (
              <a href={`/tags/${t}/`}>{t}</a>
            ))}
          </div>
        </div>
      ))}
    </div>
  </main>
  <Footer />
</body>
</html> 