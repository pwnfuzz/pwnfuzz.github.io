---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} image={heroImage} />
		<style>
			body {
				background: #f8fafc;
			}
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				background: #fff;
				width: 1000px;
				max-width: 100%;
				margin: auto;
				padding: 2.5rem 3rem 2.5rem 3rem;
				color: rgb(var(--gray-dark));
				font-size: 1.04rem;
				line-height: 1.7;
			}
			.toc-block {
				background: #fafdff;
				border: 1px dashed #e0e7ef;
				border-radius: 7px;
				padding: 0.7rem 0.8rem;
				font-size: 0.93rem;
				margin-bottom: 1.2rem;
				color: #6b7280;
			}
			.toc-title {
				font-weight: 500;
				font-size: 0.99rem;
				color: #8b5cf6;
				margin-bottom: 0.4rem;
				letter-spacing: 0.01em;
			}
			.toc-list {
				list-style: none;
				margin: 0;
				padding: 0;
			}
			.toc-list li {
				margin-bottom: 0.32em;
			}
			.toc-link {
				color: #7c3aed;
				text-decoration: none;
				font-weight: 400;
				transition: color 0.2s;
			}
			.toc-link:hover {
				color: #5b21b6;
				text-decoration: underline;
			}
			.prose h1 {
				font-size: 2.1rem;
			}
			.prose h2 {
				font-size: 1.4rem;
			}
			.prose h3 {
				font-size: 1.18rem;
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			@media (max-width: 900px) {
				.prose {
					display: block;
					padding: 1.5rem 0.5rem;
				}
				.toc {
					display: none;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<nav class="toc-block" id="toc-block" style="display:none">
						<div class="toc-title">On this page</div>
						<ul class="toc-list"></ul>
					</nav>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
<script type="module">
  const toc = document.getElementById('toc-block');
  const tocList = toc?.querySelector('.toc-list');
  const content = document.querySelector('.prose');
  if (tocList && content) {
    const headings = Array.from(content.querySelectorAll('h2, h3'));
    if (headings.length > 0) {
      toc.style.display = '';
      headings.forEach(h => {
        if (!h.id) h.id = h.textContent.toLowerCase().replace(/[^a-z0-9]+/g, '-');
        const li = document.createElement('li');
        li.style.marginLeft = h.tagName === 'H3' ? '1.2em' : '0';
        const a = document.createElement('a');
        a.href = `#${h.id}`;
        a.className = 'toc-link';
        a.textContent = h.textContent;
        li.appendChild(a);
        tocList.appendChild(li);
      });
    }
  }
</script>
