---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			body {
				background: #f8fafc;
				background-image: url("data:image/svg+xml,%3csvg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cline x1='0' y1='32' x2='32' y2='0' stroke='rgba(0,0,0,0.04)' stroke-width='1'/%3e%3c/svg%3e");
				background-repeat: repeat;
				background-size: 32px 32px;
				color: var(--drac-fg);
			}
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
			}
			.prose {
				width: 1250px;
				max-width: 100%;
				margin: auto;
				padding: 2.5rem 3rem 2.5rem 3rem;
				color: var(--drac-fg);
				font-size: 1.04rem;
				line-height: 1.7;
				background: #fff;
				border-radius: 10px;
			}
			.toc-block {
				background: #fafdff;
				border: 1px dashed #e0e7ef;
				border-radius: 7px;
				padding: 0.7rem 0.8rem;
				font-size: 0.93rem;
				margin-bottom: 1.2rem;
				color: #6b7280;
			}
			.toc-title {
				font-weight: 500;
				font-size: 0.99rem;
				color: #8b5cf6;
				margin-bottom: 0.4rem;
				letter-spacing: 0.01em;
			}
			.toc-list {
				list-style: none;
				margin: 0;
				padding: 0;
			}
			.toc-list li {
				margin-bottom: 0.32em;
			}
			.toc-link {
				color: #7c3aed;
				text-decoration: none;
				font-weight: 400;
				transition: color 0.2s;
			}
			.toc-link:hover {
				color: #5b21b6;
				text-decoration: underline;
			}
			.prose h1, .title h1 {
				color: var(--accent);
				font-size: 2.1rem;
			}
			.prose h2, .prose h3 {
				color: #111;
				font-size: 1.4rem;
				text-decoration: underline;
				font-weight: 700;
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--drac-comment);
			}
			.last-updated-on {
				font-style: italic;
				color: var(--drac-yellow);
			}
			code {
				background: #23263a;
				color: #f7f8fa;
				border-radius: 4px;
				padding: 0.18em 0.5em 0.15em 0.5em;
				font-family: 'JetBrains Mono', 'Fira Mono', 'Consolas', 'Monaco', monospace;
				font-size: 0.97em;
				box-shadow: 0 1px 2px rgba(44,41,78,0.04);
				border: 1px solid #23263a;
			}
			pre {
				background: #23263a;
				color: #f7f8fa;
				border-radius: 8px;
				padding: 1.2em 1.1em 1.1em 1.1em;
				font-family: 'JetBrains Mono', 'Fira Mono', 'Consolas', 'Monaco', monospace;
				font-size: 0.99em;
				box-shadow: 0 2px 8px rgba(44,41,78,0.08);
				border: 1.5px solid #23263a;
				overflow-x: auto;
			}
			hr {
				border: none;
				border-top: 1px solid var(--drac-comment);
				margin: 2em 0;
			}
			@media (max-width: 900px) {
				.prose {
					display: block;
					padding: 1.5rem 0.5rem;
				}
				.toc {
					display: none;
				}
			}
		</style>
		<style>
			.author-box {
				display: flex;
				align-items: center;
				gap: 1.2em;
				background: linear-gradient(90deg, #fafdff 60%, #f7f8fa 100%);
				border: 1.5px solid #e0e7ef;
				border-radius: 16px;
				padding: 1.5em 2em;
				margin: 2.5em auto 0 auto;
				max-width: 600px;
				box-shadow: 0 4px 24px rgba(44,41,78,0.10), 0 1.5px 8px rgba(44,41,78,0.06);
				transition: transform 0.22s cubic-bezier(.4,0,.2,1), box-shadow 0.22s cubic-bezier(.4,0,.2,1);
				cursor: pointer;
			}
			.author-box:hover {
				transform: translateY(-4px) scale(1.025);
				box-shadow: 0 8px 32px rgba(44,41,78,0.16), 0 2px 12px rgba(44,41,78,0.10);
				border-color: #e22d30;
				background: linear-gradient(90deg, #fafdff 40%, #ffeaea 100%);
			}
			.author-avatar {
				width: 74px;
				height: 74px;
				border-radius: 50%;
				object-fit: cover;
				border: 2.5px solid #e22d30;
				background: #fff;
				box-shadow: 0 2px 8px rgba(44,41,78,0.08);
				transition: border-color 0.22s;
			}
			.author-box:hover .author-avatar {
				border-color: #3b82f6;
			}
			.author-info {
				display: flex;
				flex-direction: column;
				gap: 0.3em;
			}
			.author-name {
				font-size: 1.18rem;
				font-weight: 800;
				color: #e22d30;
				margin-bottom: 0.18em;
				letter-spacing: 0.01em;
				text-shadow: 0 1px 2px #fff8, 0 0.5px 1px #e22d3022;
			}
			.author-bio {
				color: #23263a;
				font-size: 1.04rem;
				font-weight: 500;
				line-height: 1.5;
			}
			.author-extra {
				display: block;
				color: #888;
				font-size: 0.97rem;
				margin-top: 0.3em;
				font-style: italic;
			}
			.author-tagline {
				display: block;
				color: #3b82f6;
				font-size: 0.98rem;
				margin-top: 0.25em;
				font-weight: 700;
				letter-spacing: 0.01em;
				font-family: 'JetBrains Mono', 'Fira Mono', 'Consolas', 'Monaco', monospace;
			}
			@media (max-width: 600px) {
				.author-box {
					flex-direction: column;
					align-items: flex-start;
					padding: 1em 0.7em;
				}
				.author-avatar {
					width: 54px;
					height: 54px;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<nav class="toc-block" id="toc-block" style="display:none">
						<div class="toc-title">On this page</div>
						<ul class="toc-list"></ul>
					</nav>
					<slot />
				</div>
				<!-- Author Box Start -->
				{Astro.props.author && (
					<div class="author-box">
						<img class="author-avatar" src={`/img/team/${Astro.props.author.toLowerCase()}.jpg`} alt={Astro.props.author} />
						<div class="author-info">
							<div class="author-name">{Astro.props.author}</div>
							<div class="author-bio">
								{Astro.props.author === 'd4mianwayne' && (
									<>
										Security researcher focused on fuzzing, reverse engineering, and exploit development. Wannabe Pwner and a bit of a nerd.<br/>
										<span class="author-extra">Loves CTFs, open-source, and coffee. Always learning, always hacking.</span>
										<span class="author-tagline">wannabe pwner | security researcher</span>
									</>
								)}
								{Astro.props.author === 'ghostbyt3' && (
									<>
										Security researcher focused on red teaming and web application security, with a strong interest in reverse engineering, exploit development, and low-level Windows internals.<br/>
										<span class="author-extra">Enjoys automating exploits, breaking boundaries, and sharing knowledge with the community.</span>
										<span class="author-tagline">windows internals nerd | security researcher</span>
									</>
								)}
							</div>
						</div>
					</div>
				)}
				<!-- Author Box End -->
			</article>
		</main>
		<Footer />
	</body>
</html>
<script type="module">
  const toc = document.getElementById('toc-block');
  const tocList = toc?.querySelector('.toc-list');
  const content = document.querySelector('.prose');
  if (tocList && content) {
    const headings = Array.from(content.querySelectorAll('h2, h3'));
    if (headings.length > 0) {
      toc.style.display = '';
      headings.forEach(h => {
        if (!h.id) h.id = h.textContent.toLowerCase().replace(/[^a-z0-9]+/g, '-');
        const li = document.createElement('li');
        li.style.marginLeft = h.tagName === 'H3' ? '1.2em' : '0';
        const a = document.createElement('a');
        a.href = `#${h.id}`;
        a.className = 'toc-link';
        a.textContent = h.textContent;
        li.appendChild(a);
        tocList.appendChild(li);
      });
    }
  }
</script>
